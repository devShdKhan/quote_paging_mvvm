name: Linter Run Action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  detekt:
    name: Linter Run

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      actions: write
      pull-requests: write

    steps:

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Linter Run
        uses: alaegin/Detekt-Action@v1.22.0
        with:
          github_token: ${{ secrets.github_token }}
          detekt_config: linter/detekt_config.yml
          reviewdog_reporter: github-pr-review
          reviewdog_level: error
          fail_on_error: true

      - name: Extract Detekt Issues
        id: extract-issues
        run: |
          ISSUES=$(awk -F'[<>]' '/<tr class="error">/{print $5}' build/reports/detekt/detekt-check.html)
          echo "::set-output name=issues::$ISSUES"

      - name: Comment on PR if issues found
        if: steps.extract-issues.outputs.issues
        run: |
          ISSUES=${{ steps.extract-issues.outputs.issues }}
          IFS=' ' read -r -a ISSUE_ARRAY <<< "$ISSUES"
          for ISSUE in "${ISSUE_ARRAY[@]}"; do
            FILE=$(echo "$ISSUE" | awk -F':' '{print $1}')
            LINE=$(echo "$ISSUE" | awk -F':' '{print $2}')
            COMMENT=$(echo "$ISSUE" | awk -F':' '{print $3}')
            echo "File: $FILE, Line: $LINE, Comment: $COMMENT"
            curl -sSL -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"body":"Detekt issue: '"$COMMENT"'","path":"'"$FILE"'","position":'"$LINE"'}' \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/comments"
          done

      - name: Validate Comments
        run: |
          comments_json=$(curl -s -H "Authorization: Bearer ${{ secrets.github_token }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments?per_page=100")
          has_errors=$(echo "$comments_json" | jq 'map(select(.line != null)) | length > 0')
          if [[ "$has_errors" == "true" ]]; then
            echo "PR has unresolved comments"
            exit 1
          fi
